:) Which header file is required to use file I/O operations?    
a) <ifstream>  b) <ostream>    
c) <fstream>   d) <iostream>
c
:) Which of the following is not used as a file opening mode?   
a) ios::trunc  b) ios::binary  
c) ios::in     d) ios::ate
a
:) Which of the following statements are correct?   
a) Not possible to combine file in open().         b)possible to combine more file in open().    
c) ios::inand ios::out are i/o file opening mode.  d)None
b
:) If a class is derived privately from a base class then:
a)no members of the base class is inherited                    b)all members accessible by derived class
c)all members inherited by class but are hidden, unaccessable  d)no derivation of class gives error
a
:) What is a pure virtual function?
a)virtual function defined inside the base class      b)Virtual function that's no definition base class
c)virtual function thats defined inside derived class d) Any function that is made virtual
d
:) Which is the correct syntax of declaring a virtual function?
a)virtual int func();     b)virtual int func(){};
c)inline virtual func();  d)inline virtual func(){};
b
:) Which among the following best describes polymorphism?
a)the ability for a data to be processed more than 1 form b)ability for a data to be processed in 1 form
c)ability for many data to be processed in one way        d)ability for undefined data be processed inleast way
a
:) What do you call the languages that support classes but not polymorphism?
a)Class based language    b)Procedure Oriented language
c)Object-based language   d)If classes are supported, polymorphism will always be
c
:) Which among the following is the language which supports classes but not polymorphism?
a)SmallTalk       b)Java
c)C++             d)Ad
d 
:) Which among the following best describes encapsulation? 
a)A way of combining various data members into a single unit  b)Inheritance
c)Code modification can be additional overhead                d)Using Access Specifiers
d
:) While using encapsulation, which among the following is possible?
a)A way of combining various member functions into a single unit        b) Abstraction
C)Member's data type can be changed without changing any other code     d) Using only private members
c
:) Which feature can be implemented using encapsulation?
a)A way of combining various data members into a single unit that operate on any data  b)Polymorphism
c)Data member's type can't be changed, or whole code have to be changed                d)Using inheritance
c
:) What is a binary operator?
a)that performs its action on a single operand   b)that performs its action on two operand
c)that performs its action on three operand      d)that performs its action on any number of operands
b
:) Which is the correct example of a binary operator?
a) ++                              b) —
c) Dereferencing operator(*)       d) +
d
:) Which is the correct example of a unary operator?
a) &       b) ==
c) —       d) /
c
:) What is a template?
a)A formula for creating a generic class      b)Used to manipulate the class
c)Used for creating the attributes            d)None of the mentioned
a
:) Pick out the correct statement about string template?
a) It is used to replace a string.   b) It is used to replace a string with another string at runtime.
c) It is used to delete a string.    d) none of the mentioned
b
:) How to declare a template?
a) tem               b) temp
c) template < >      d) none of the mentioned
c 
:) What is an exception in C++ program?
a) A problem that arises during the execution of a program    b) A problem that arises during compilation
c) Also known as the syntax error                             d) Also known as semantic error
a
:) By default, what a program does when it detects an exception?
a) Continue running                        b) Results in termination of the program
c) Calls other functions of the program    d) Removes exception and tells the programmer about an exception
b
:) Why do we need to handle exceptions?
a) avoid unexpected behaviour of program during runtime   b) To let compiler remove all exceptions by itself
c) To successfully compile the program                    d) To get correct output
a